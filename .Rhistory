view(a)
install.packages("rmarkdown")
install.packages("ggplot2")
install.packages("devtools")
a <- installed.packages()
view(a)
View(a)
a
x<- list(1,"a",TRUE,3+2i,5L)
x
x<- list(1,"a",TRUE,3+2i,5L,1:50)
x
?matrix
m<- matrix(nrow = 2,ncol = 3)
m
dim(m)
attributes(m)
m<-matrix(1:6,2,3)
m
m<-matrix(1:6,2,3,T)
m
n<-1:10
n<-1:10
n
dim(n)<- c(2,5)
n
#Otra forma de crear una matriz es unir vectores
x<-1:3
y<-10:12
#CBind une columnas
cbind(x,y)
#RBind une filas
rbind(x,y)
x<-factor(c("si","si","no","no","si"))
x
x<-factor(c("Azul","Verde","Verde","Azul","Rojo"))
x
table(x)
unclass(x)
?factor
x<-factor(c("Azul","Verde","Verde","Azul","Rojo"),levels = c("Rojo","Amarillo","Verde","Naranja"))
x
x<-factor(c("Azul","Verde","Verde","Azul","Rojo"),levels = c("Rojo","Amarillo","Verde","Azul"))
x
unclass(x)
w<-c(1,2,Na,10,3)
is.na(w)
w<-c(1,2,NA,10,3)
is.na(w)
is.nan(w)
y<-c(1,2,NaN,10,3)
is.na(y)
is.nan(y)
x<- data.frame(foo=1:4,bar=c(T,T,F,F))
x
nrow(x)
ncol(x)
x<-1:3
names(x)
names(x)<-c("foo","bar","norf")
x
names(x)
x<- list(a=1,b=2,c=3)
x
m<- matrix(1:4,nrow = 2,ncol = 2)
dimnames(m)<-list(c("a","b"),c("c","d"))
m
?read.table
sapply()
?sapply(list, function)
?sapply
y
y<- data.frame(a=1,b="a")
y
dput(y)
y<- data.frame(a=1,b="a")
dput(y)
dput(y, file="~Github/Software-Actuarial-lll/Software-Actuarial-lll/y.R")
y<- data.frame(a=1,b="a")
dput(y)
dput(y, file="~/Github/Software-Actuarial-lll/Software-Actuarial-lll/y.R")
mtcars
setwd("~Github\Software-Actuarial-lll\Software-Actuarial-lll")
#Extraccion de Datos
airquality[1:6,]
setwd("~Github/Software-Actuarial-lll/Software-Actuarial-lll")
#Extraccion de Datos
airquality[1:6,]
complete.cases(airquality[1:6,])
airquality[completos,]
completos<- complete.cases(airquality[1:6,])
airquality[completos,]
data<- airquality[completos,]
data[1:6,]
setwd("~/Github/Software-Actuarial-lll/Software-Actuarial-lll")
#Extraccion de Datos
airquality[1:6,]
completos<- complete.cases(airquality[1:6,])
data<- airquality[completos,]
data[1:6,]
#Algunas operaciones
x<-1:4;y<-6:9
x+y
x>2
x>2
x>=2
y==8
x*Y
x*y
x/y
x<-matrix(1:4,2,2);y<-matrix(rep(10,4),2,2)
x
y
x*y
x/y
x%*%y
y%*%x
x=3
if(x>3)
{"X es mayor a 3"}
else
{"X es menor a 3"}
if(x>5)
{"X es mayor a 3"}
else
{"X es menor a 3"}
if(x>5)
{"X es mayor a 3"
} else{
"X es menor a 3"}
x=3
if(x>5){
print("X es mayor a 3")
} else{
print("X es menor a 3")
}
x=7
if(x<5)
{
print("menor a 5")
}else if(x<=10)
{
print("Entre 5 y 10")
}else
{
print("Mayor a 10")
}
if(x>3)
{y<-10
}else{
y<-0
}
y<- if(x>3)
{
10
}else{
0
}
5 <-z
while(z>=3 && z<=10){
print(z)
moneda<-rbinom(1,1,0.5)
if (moneda==1){
z<- z+1
}else{
z<-z-1
}
}
5 <-z
z <-5
while(z>=3 && z<=10){
print(z)
moneda<-rbinom(1,1,0.5)
if (moneda==1){
z<- z+1
}else{
z<-z-1
}
}
set.seed(1)
z <-5
while(z>=3 && z<=10){
print(z)
moneda<-rbinom(1,1,0.5)
if (moneda==1){
z<- z+1
}else{
z<-z-1
}
}
z <-5
while(z>=3 && z<=10){
print(z)
moneda<-rbinom(1,1,0.5)
if (moneda==1){
z<- z+1
}else{
z<-z-1
}
}
z <-5
while(z>=3 && z<=10){
print(z)
moneda<-rbinom(1,1,0.5)
if (moneda==1){
z<- z+1
}else{
z<-z-1
}
}
z <-5
while(z>=3 && z<=10){
print(z)
moneda<-rbinom(1,1,0.5)
if (moneda==1){
z<- z+1
}else{
z<-z-1
}
}
z <-5
while(z>=3 && z<=10){
print(z)
moneda<-rbinom(1,1,0.5)
if (moneda==1){
z<- z+1
}else{
z<-z-1
}
}
z <-5
while(z>=3 && z<=10){
print(z)
moneda<-rbinom(1,1,0.5)
if (moneda==1){
z<- z+1
}else{
z<-z-1
}
}
set.seed(1)
cont<- 0
z <-5
while(z>=3 && z<=10){
print(z)
moneda<-rbinom(1,1,0.5)
if (moneda==1){
z<- z+1
}else{
z<-z-1
}
cont<-cont+1
}
#Ciclos while
set.seed(1)
cont<- 0
z <-5
while(z>=3 && z<=10){
print(z)
moneda<-rbinom(1,1,0.5)
if (moneda==1){
z<- z+1
}else{
z<-z-1
}
cont<-cont+1
}
print(cont)
#Ciclos while
set.seed(1)
cont<- 0
z <-5
while(z>=3 && z<=10){
a<-c(z)
moneda<-rbinom(1,1,0.5)
if (moneda==1){
z<- z+1
}else{
z<-z-1
}
cont<-cont+1
}
a
#Ciclos while
set.seed(1)
cont<- 0
z <-5
while(z>=3 && z<=10){
a<-c(z,c(z))
moneda<-rbinom(1,1,0.5)
if (moneda==1){
z<- z+1
}else{
z<-z-1
}
cont<-cont+1
}
a
#Ciclos while
set.seed(1)
cont<- 0
z <-5
while(z>=3 && z<=10){
moneda<-rbinom(1,1,0.5)
if (moneda==1){
z<- z+1
}else{
z<-z-1
}
a<-c(z,c(z))
}
a
#Ciclos while
set.seed(1)
cont<- 0
z <-5
while(z>=3 && z<=10){
a<-c(z:c(z))
moneda<-rbinom(1,1,0.5)
if (moneda==1){
z<- z+1
}else{
z<-z-1
}
}
a
#Ciclos while
set.seed(1)
cont<- 0
z <-5
while(z>=3 && z<=10){
a<-c(1:31,z)
moneda<-rbinom(1,1,0.5)
if (moneda==1){
z<- z+1
}else{
z<-z-1
}
}
a
#Ciclos while
set.seed(1)
cont<- 0
z <-5
while(z>=3 && z<=10){
a<-c(z,1:31)
moneda<-rbinom(1,1,0.5)
if (moneda==1){
z<- z+1
}else{
z<-z-1
}
}
a
#Ciclos while
set.seed(1)
cont<- 0
z <-5
while(z>=3 && z<=10){
for(i in 1:31) {
c(i:31)<-z
}
moneda<-rbinom(1,1,0.5)
if (moneda==1){
z<- z+1
}else{
z<-z-1
}
}
a
#Ciclos while
set.seed(1)
cont<- 0
z <-5
while(z>=3 && z<=10){
for(i in 1:31) {
z<-c(i:31)
}
moneda<-rbinom(1,1,0.5)
if (moneda==1){
z<- z+1
}else{
z<-z-1
}
}
a
#Ciclos while
set.seed(1)
cont<- 0
z <-5
while(z>=3 && z<=10){
for(i in 1:31) {
c(i:31) <- z
}
moneda<-rbinom(1,1,0.5)
if (moneda==1){
z<- z+1
}else{
z<-z-1
}
}
vector?
#Ciclos while
set.seed(1)
cont<- 0
z <-5
while(z>=3 && z<=10){
for(i in 1:31) {
vector(i:31) <- z
}
moneda<-rbinom(1,1,0.5)
if (moneda==1){
z<- z+1
}else{
z<-z-1
}
}
a
